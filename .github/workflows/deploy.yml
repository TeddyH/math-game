name: Deploy MATH-GAME

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Python 설정
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Python 의존성 설치 및 테스트
    - name: Install and Test Python dependencies
      run: |
        pip install -r requirements.txt
        python -c "import flask; print('Flask import successful')"

    # 서버에 배포
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # 프로젝트 디렉토리 생성
          mkdir -p /home/${{ secrets.SERVER_USERNAME }}/math1
          cd /home/${{ secrets.SERVER_USERNAME }}/math1
          
          # Git으로 코드 받기 (또는 업데이트)
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/${{ github.repository }} .
            git checkout main
          fi
          
          # 기존 Flask 서버 프로세스 종료
          pkill -f "python.*app.py" || echo "실행 중인 app.py 프로세스 없음"
          sleep 2
          
          # Python 가상환경 확인 및 생성
          if [ ! -d "venv" ]; then
            echo "가상환경 생성 중..."
            python3 -m venv venv
          fi
          
          # 가상환경 활성화 및 의존성 설치
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Flask 애플리케이션 시작 (백그라운드)
          echo "Flask 애플리케이션 시작 중..."
          nohup python app.py > flask.log 2>&1 &
          echo $! > flask-server.pid
          
          echo "배포 완료!"
          echo "애플리케이션이 http://$(hostname -I | awk '{print $1}'):5001 에서 실행 중입니다."